/**
 * Simple usage example showing the clean API
 */

import { useConfig } from 'tsops'

// Generated by: tsops prune web
const config = useConfig({
  project: 'my-app',
  namespace: 'prod',
  service: {
    name: 'web',
    kind: 'gateway',
    image: 'my-app-web:latest',
    internalUrl: 'http://my-app-web.prod.svc.cluster.local:8080',
    port: 8080,
    resources: { cpu: '100m', memory: '128Mi' }
  },
  dependencies: [
    {
      service: 'api',
      url: 'http://my-app-api.prod.svc.cluster.local:8080',
      port: 8080,
      protocol: 'http'
    }
  ],
  environment: {
    PORT: { type: 'static', value: '8080' },
    API_URL: { type: 'static', value: 'http://my-app-api.prod.svc.cluster.local:8080' }
  }
})

// Clean API usage
const apiUrl = config.dependencyUrl('api')        // 'http://my-app-api.prod.svc.cluster.local:8080'
const port = config.env('PORT')                   // '8080'
const serviceName = config.service.name           // 'web'

// Error handling
try {
  const invalidUrl = config.dependencyUrl('invalid')
} catch (error) {
  console.error('Dependency not found:', error.message)
}

// Utility methods
const hasApi = config.hasDependency('api')        // true
const depNames = config.dependencyNames           // ['api']
const allDeps = config.dependencies               // Array of dependency objects