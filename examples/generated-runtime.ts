/**
 * Example of generated runtime configuration
 * This file would be generated by: tsops prune web
 */

import { useConfig } from 'tsops'

export default useConfig({
  "project": "hyper-graph",
  "namespace": "prod",
  "service": {
    "name": "web",
    "kind": "gateway",
    "image": "ghcr.io/org/hyper-graph-web:abc123",
    "internalUrl": "http://hyper-graph-web.prod.svc.cluster.local:8080",
    "externalUrl": "https://example.com",
    "port": 8080,
    "resources": {
      "cpu": "100m",
      "memory": "128Mi",
      "replicas": 1
    }
  },
  "dependencies": [
    {
      "service": "api",
      "url": "http://hyper-graph-api.prod.svc.cluster.local:8080",
      "port": 8080,
      "protocol": "http",
      "description": "Main API service"
    },
    {
      "service": "auth",
      "url": "http://hyper-graph-auth.prod.svc.cluster.local:8081",
      "port": 8081,
      "protocol": "http",
      "description": "Authentication service"
    },
    {
      "service": "observability",
      "url": "http://hyper-graph-observability.prod.svc.cluster.local:4318",
      "port": 4318,
      "protocol": "http",
      "description": "OTLP collector"
    }
  ],
  "environment": {
    "NODE_ENV": {
      "type": "static",
      "value": "production"
    },
    "PORT": {
      "type": "static",
      "value": "8080"
    },
    "API_URL": {
      "type": "static",
      "value": "http://hyper-graph-api.prod.svc.cluster.local:8080"
    },
    "AUTH_URL": {
      "type": "static",
      "value": "http://hyper-graph-auth.prod.svc.cluster.local:8081"
    },
    "OBSERVABILITY_URL": {
      "type": "static",
      "value": "http://hyper-graph-observability.prod.svc.cluster.local:4318"
    },
    "JWT_SECRET": {
      "type": "secret",
      "secretName": "web-secrets",
      "secretKey": "JWT_SECRET"
    },
    "API_KEY": {
      "type": "secret",
      "secretName": "web-secrets",
      "secretKey": "API_KEY"
    },
    "LOG_LEVEL": {
      "type": "configmap",
      "configMapName": "web-config",
      "configMapKey": "LOG_LEVEL"
    },
    "FEATURE_FLAGS": {
      "type": "configmap",
      "configMapName": "web-config",
      "configMapKey": "FEATURE_FLAGS"
    }
  }
})

// Example usage:
// const apiUrl = config.dependencyUrl('api')
// const authUrl = config.dependencyUrl('auth')
// const port = config.env('PORT')
// const jwtSecretRef = config.secretRef('JWT_SECRET')